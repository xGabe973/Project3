"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var constants_1 = require("react-remove-scroll-bar/constants");
var medium_1 = require("./medium");
var nothing = function () {
    return;
};
function RemoveScroll(props) {
    var ref = React.useRef(null);
    var _a = React.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing,
    }), callbacks = _a[0], setCallbacks = _a[1];
    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert;
    var SideCar = sideCar;
    var containerProps = tslib_1.__assign({ ref: ref }, callbacks);
    return (React.createElement(React.Fragment, null,
        enabled && (React.createElement(SideCar, { sideCar: medium_1.effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, lockRef: ref })),
        forwardProps
            ? React.cloneElement(React.Children.only(children), containerProps)
            : React.createElement("div", tslib_1.__assign({}, containerProps, { className: className }), children)));
}
exports.RemoveScroll = RemoveScroll;
RemoveScroll.defaultProps = {
    enabled: true,
    removeScrollBar: true,
    inert: false,
};
(function (RemoveScroll) {
    RemoveScroll.classNames = {
        fullWidth: constants_1.fullWidthClassName,
        zeroRight: constants_1.zeroRightClassName,
    };
})(RemoveScroll || (RemoveScroll = {}));
exports.RemoveScroll = RemoveScroll;
